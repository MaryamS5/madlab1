import { Text, View, TouchableOpacity, StyleSheet,StatusBar } from 'react-native';
import React, { useState } from 'react';

export default function App() {
  const [display, setDisplay] = useState('');

 // Function to handle button presses
  const handlePress = (input) => {
    if (input === 'C') {
      setDisplay(''); // Clear display
    } else if (input === '=') {
      const result = calculate(display);
      setDisplay(result); // Show result
    } else {
      setDisplay(display + input); // Add input to the display
    }
  };

const calculate = (expression) => {
  let num1 = '';
  let num2 = '';
  let operator = '';

for (let i = 0; i < expression.length; i++) {
    let char = expression[i]; // Access each character by index
    if (!isNaN(char) || char === '.')  {
      if (operator === '') {
        num1 += char;
      } else {
        num2 += char;
      }
    } else {
      operator = char;
    }
  }

  const number1 = Number(num1); // or +num1
  const number2 = Number(num2); // or +num2

  switch (operator) {
    case '+':
      return (number1 + number2).toString();
    case '-':
      return (number1 - number2).toString();
    
    case '*':
      return (number1 * number2).toString();
    case '/':
      return number2 !== 0 ? (number1 / number2).toString() : 'Error'; // Handle division by zero
    default:
      return 'Error'; // Handle invalid operator
  }
};



  
  // Function to create a button with given label
  const callButton = (input) => (
    <TouchableOpacity style={styles.button} onPress={() => handlePress(input)}>
      <Text style={styles.buttonText}>{input}</Text>
    </TouchableOpacity>
  );

  return (
    <View style={styles.container}>
  {/* Status Bar */}
      <StatusBar barStyle="light-content" backgroundColor="black" />

      {/* Display */}
      <Text style={styles.display}>{display}</Text>

      {/* Buttons */}
      <View style={styles.container2}>
        {callButton('C')}
        {callButton('+/-')}
        {callButton('%')}
        {callButton('/')}
      </View>
      <View style={styles.container2}>
        {callButton('7')}
        {callButton('8')}
        {callButton('9')}
        {callButton('*')}
      </View>
      <View style={styles.container2}>
        {callButton('4')}
        {callButton('5')}
        {callButton('6')}
        {callButton('-')}
      </View>
      <View style={styles.container2}>
        {callButton('1')}
        {callButton('2')}
        {callButton('3')}
        {callButton('+')}
      </View>
      <View style={styles.container2}>
        {callButton('0')}
        {callButton('.')}
        {callButton('=')}
      </View>




    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    backgroundColor: 'black',
    padding: 8,
  },
  display: {
    color: 'white',
    fontSize: 40,
    textAlign: 'right',
    marginBottom: 20,
    marginRight: 20,
  },
  container2: {
   flexDirection: 'row',
   
     justifyContent: 'space-around',
    marginBottom: 12,
    backgroundColor:"black"
  },
  button: {
    backgroundColor: '#333',
    alignItems: 'center',
    justifyContent: 'center',
    margin: 4,
    height: 70,
    width: 50,
    borderRadius: 400,
   
  },
  buttonText: {
    color: '#fff',
    fontSize: 35,
  },
}); 


